<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.30-10" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while " output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preThrow="throw" preForIn="foreach" stepFor="by" author="pr94rsb" created="2025-06-13" changedby="pr94rsb" changed="2025-06-13" origin="Structorizer 3.30-10 / C99Parser: &#34;C:\LFO\PROG_ProjetC_BZI_HMT_LFO\PROG-PROJ2025-BZI-LFO-HMT\PROG_ProjetC_BZI_HMT_LFO\GestionNotes.c&#34;" text="&#34;int modifierNote(Systeme * s, const char * ptrNom_module, const char * ptrNom_branche, const char * ptrNom_note, float valeur)&#34;" comment="" color="ffffff" type="sub" style="nice">
	<children>
		<instruction text="&#34;//type entier signée&#34;,&#34;  i&#34;,&#34;//type entier non signée 8 bits&#34;,&#34;  note_modifier&#34;,&#34;//type Module&#34;,&#34;  *ptrm&#34;,&#34;//type Branch&#34;,&#34;  *ptrb&#34;" comment="&#34;&#34;" color="c0c0c0" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;note_modifier &#60;- 0&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<call text="&#34;* ptrm &#60;- trouverModule(s, ptrNom_module)&#34;" comment="" color="ff8000" disabled="0"></call>
		<call text="&#34;* ptrb &#60;- trouverBranche(ptrm, ptrNom_branche)&#34;" comment="" color="ff8000" disabled="0"></call>
		<alternative text="&#34;SI l'addresse ptrm existe pas&#34;" comment="&#34;&#34;" color="ffff80" disabled="0">
			<qTrue>
				<instruction text="&#34;OUTPUT &#34;&#34;user_type_003 introuvable.&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<jump text="&#34;return 1&#34;" comment="" color="ffffff" disabled="0"></jump>
			</qTrue>
			<qFalse>
				<alternative text="&#34;SINON SI l'addresse ptrb existe pas&#34;" comment="&#34;&#34;" color="ffff80" disabled="0">
					<qTrue>
						<instruction text="&#34;OUTPUT &#34;&#34;Branche introuvable.&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
						<jump text="&#34;return 1&#34;" comment="" color="ffffff" disabled="0"></jump>
					</qTrue>
					<qFalse>
						<alternative text="&#34;SINON SI valeur &#60; 1.00 or valeur &#62; 6.00&#34;" comment="&#34;&#34;" color="ffff80" disabled="0">
							<qTrue>
								<instruction text="&#34;OUTPUT &#34;&#34;note invalide &#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
								<instruction text="&#34;OUTPUT &#34;&#34;pour rappel :\n la note doit etre entre 1.00 et 6.00&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
								<jump text="&#34;return 1&#34;" comment="" color="ffffff" disabled="0"></jump>
							</qTrue>
							<qFalse>
								<for text="&#34;for i &#60;- 0 to ptrb-&#62;nb_notes - 1&#34;" comment="" counterVar="i" startValue="0" endValue="ptrb-&#62;nb_notes - 1" stepConst="1" style="COUNTER" color="80ffff" disabled="0">
									<qFor>
										<alternative text="&#34;strcmp(ptrb-&#62;notes[i].nom, ptrNom_note) = 0&#34;" comment="" color="ffff80" disabled="0">
											<qTrue>
												<instruction text="&#34;ptrb-&#62;notes[i].nom &#60;- ptrNom_note&#34;" comment="" color="80ff80" rotated="0" disabled="0"></instruction>
												<instruction text="&#34;ptrb-&#62;notes[i].valeur &#60;- valeur&#34;" comment="" color="80ff80" rotated="0" disabled="0"></instruction>
												<instruction text="&#34;note_modifier &#60;- 1&#34;" comment="" color="80ff80" rotated="0" disabled="0"></instruction>
												<instruction text="&#34;OUTPUT &#34;&#34;user_type_001 modifier avec succÃ¨s.&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
											</qTrue>
											<qFalse color="ff8080">
											</qFalse>
										</alternative>
									</qFor>
								</for>
							</qFalse>
						</alternative>
					</qFalse>
				</alternative>
			</qFalse>
		</alternative>
		<alternative text="&#34;note_modifier = 0&#34;" comment="" color="ffff80" disabled="0">
			<qTrue>
				<instruction text="&#34;OUTPUT &#34;&#34;user_type_001 introuvable.&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;OUTPUT &#34;&#34;Verifiez l'orthographe du nom de la note.&#34;&#34;&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<jump text="&#34;return 1&#34;" comment="" color="ffffff" disabled="0"></jump>
			</qTrue>
			<qFalse>
				<jump text="&#34;return 0&#34;" comment="" color="ffffff" disabled="0"></jump>
			</qFalse>
		</alternative>
	</children>
</root>